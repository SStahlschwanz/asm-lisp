We need to move from trees to arbitrary (directed) graphs.
There are cyclic dependencies between different components. Consider

	struct List
	{
		List* next;
	};

Modelling this as a tree would not the situation easier but more complicated
With arbitrary graphs, the distinction between identity equality and structural equality becomes much more important:

	- always cache macro execution results
	- do not copy any graphs for passing them to macros, need copy-on-write

Remove square bracket lists and round-comma-lists - they don't offer any advantages

